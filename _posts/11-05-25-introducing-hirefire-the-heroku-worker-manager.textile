---
layout: post
title: "Introducing HireFire: The Heroku Worker Manager"
excerpt: HireFire fires idle workers, and hires them when needed, saving you money and adding scalability.
published: true
author:
  full: Michael van Rooijen
  twitter: meskyanichi
  description: Michael is a (freelance) Ruby programmer and <a href="https://github.com/meskyanichi">open source contributor</a>.
---

h3. About Heroku, and the problem

As you are most certainly already aware of, "Heroku":http://heroku.com/ is a platform dedicated to hosting Ruby (or Rack) applications. One of the reasons you might consider Heroku is when you:

* don't know how, or don't want to provision and manage servers
* don't want to spend time on maintaining or fine-tuning servers (and software) yourself
* want to be up and running in minutes, rather than hours or days

Heroku also provides add-ons that hook up internal, and 3rd party services with your application automatically!

As appealing as it sounds, in the short run you'll find yourself spending a lot of money on resources which you would otherwise get a lot cheaper elsewhere, like with VPS or dedicated hosting.

One of those resources, is the "Heroku Worker":http://www.heroku.com/pricing#1-24.

When you run a large business, generating plenty of income, such things matter less. However, when you have a bunch of small-medium web applications, be it startups, clients or personal sites, it becomes quite expensive early on for applications that don't generate (enough) monthly revenue to pay such fees.

h3. Enter: "HireFire":http://hirefireapp.com/ - The Heroku Worker Manager

"HireFire":http://hirefireapp.com/ is a web service I recently released to address this issue. It is an attempt to bring back "pay for what you use". After all, Heroku is a "cloud" platform, right?

As the title suggests, HireFire monitors and manages your applications on Heroku. It will shut down workers when there aren't any jobs, and will then spin up new ones again when jobs get enqueued.

HireFire provides you with a simple web interface for defining how you want to scale your workers up and down. For example, you could configure it to spin up 2 workers when the queue size hits 15, and 4 workers when the queue size hits 30, and so forth. This is nice because you can configure it based on how long the average job runs.

!/images/hirefire.jpg!

<div class="notice">
  "HireFire":http://hirefireapp.com/ is currently in beta, so you can try it out for free!
</div>


